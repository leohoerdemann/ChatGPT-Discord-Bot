@page
@model ChatGPT_Discord_Bot.Pages.IndexModel
@{
    ViewData["Title"] = "Bot Statistics";
}

<h1>@ViewData["Title"]</h1>

<div>
    <p>Total Messages: <span id="totalMessages"></span></p>
</div>

<h2>Messages by User</h2>
<canvas id="userMessagesChart"></canvas>

<h2>Messages by Server</h2>
<canvas id="serverMessagesChart"></canvas>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        async function loadStats() {
            const response = await fetch('/stats/data');
            const data = await response.json();

            document.getElementById('totalMessages').innerText = data.TotalMessages;

            // Messages by User
            const userCtx = document.getElementById('userMessagesChart').getContext('2d');
            const userChartData = {
                labels: data.MessagesByUser.map(u => u.UserName),
                datasets: [{
                    label: 'Messages Sent',
                    data: data.MessagesByUser.map(u => u.MessageCount),
                    backgroundColor: 'rgba(54, 162, 235, 0.5)'
                }]
            };

            new Chart(userCtx, {
                type: 'bar',
                data: userChartData,
            });

            // Messages by Server
            const serverCtx = document.getElementById('serverMessagesChart').getContext('2d');
            const serverChartData = {
                labels: data.MessagesByServer.map(s => s.ServerName),
                datasets: [{
                    label: 'Messages Sent',
                    data: data.MessagesByServer.map(s => s.MessageCount),
                    backgroundColor: 'rgba(75, 192, 192, 0.5)'
                }]
            };

            new Chart(serverCtx, {
                type: 'bar',
                data: serverChartData,
            });
        }

        loadStats();
    </script>
}
